# ワークフロー（一連の自動化処理）の名前
name: Website Update Checker

# このワークフローが実行されるタイミング
on:
  schedule:
    # cron形式で実行スケジュールを指定
    # "*/5 * * * *" は「5分ごと」に実行するという意味
    - cron: '*/5 * * * *'
  # Actionsタブから手動で実行できるようにするためのおまじない
  workflow_dispatch:

# --- ここが重要：書き込み権限を与える設定 ---
permissions:
  contents: write

# 実行する具体的な処理内容
jobs:
  check-websites:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリのコードを仮想環境にコピーする
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Pythonの環境をセットアップする
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. 必要なライブラリをインストールする
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 4. メインのPythonスクリプトを実行する
      - name: Run website checker script
        env:
          # 前回設定したSecretsを環境変数として渡す
          WEBHOOK_A: ${{ secrets.WEBHOOK_A }}
          WEBHOOK_B: ${{ secrets.WEBHOOK_B }}
          WEBHOOK_C: ${{ secrets.WEBHOOK_C }}
        run: python hp_checker.py

      # 5. 変更があった場合に、結果をリポジトリにコミット＆プッシュする
      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n $(git status -s) ]]; then
            echo "Changes detected. Committing and pushing..."
            git add previous_data/*
            git commit -m "Update website data files"
            git push
          else
            echo "No changes to commit."
          fi
